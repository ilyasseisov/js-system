@use 'sass:math';
@import 'breakpoints';

/* Grid */

$col-gutter-sm: 16px;
$col-gutter-md: 24px;
$col-gutter-lg: 32px;

// Containers
.grid {
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @each $breakpoint, $value in $container-breakpoints {
    @media (min-width: $breakpoint) {
      max-width: $value;
    }
  }

  &-100p {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
  }
}

.grid-sm,
.grid-md,
.grid-lg,
.grid-xl,
.grid-xxl,
.grid-xxxl {
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: $sm) {
  .grid-sm {
    max-width: $grid-sm;
  }
}

@media (min-width: $md) {
  .grid-sm,
  .grid-md {
    max-width: $grid-md;
  }
}

@media (min-width: $lg) {
  .grid-sm,
  .grid-md,
  .grid-lg {
    max-width: $grid-lg;
  }
}

@media (min-width: $xl) {
  .grid-sm,
  .grid-md,
  .grid-lg,
  .grid-xl {
    max-width: $grid-xl;
  }
}

@media (min-width: $xxl) {
  .grid-sm,
  .grid-md,
  .grid-lg,
  .grid-xl,
  .grid-xxl {
    max-width: $grid-xxl;
  }
}

@media (min-width: $xxxl) {
  .grid-sm,
  .grid-md,
  .grid-lg,
  .grid-xl,
  .grid-xxl,
  .grid-xxxl {
    max-width: $grid-xxxl;
  }
}

// Row
.row {
  display: flex;
  flex-wrap: wrap;
  flex: 0 1 auto; /*explicit*/
}

// Columns

// Every type of column

// Every type of column will inherit these properties
// before overide on the respective screen width.
//  ex:
//  <div class="col-sm-8"></div> will use these properties,
//  but on sm screen size will:
//  flex: 0 0 auto;
//  width: 66.66666667%;

.row > * {
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  flex-shrink: 0;
  padding-right: $col-gutter-sm;
  padding-left: $col-gutter-sm;

  @media (min-width: 768px) {
    padding-right: $col-gutter-md;
    padding-left: $col-gutter-md;
  }
  @media (min-width: 1200px) {
    padding-right: $col-gutter-lg;
    padding-left: $col-gutter-lg;
  }
}
.col {
  // start with 0 width and then grow as much as you can
  flex: 1 0 0%;
}

// loop through each map value
@each $breakpoint, $value in $grid-breakpoints {
  @media (min-width: $value) {
    // Columns
    @for $i from 1 through 12 {
      $width: math.div(100%, 12) * $i;

      .col-#{$breakpoint}-#{$i} {
        flex: 0 0 auto;
        width: $width;
      }
    }
    // Offsets
    @for $i from 0 through 11 {
      $width: math.div(100%, 12) * $i;

      .col-#{$breakpoint}-offset-#{$i} {
        margin-left: $width;
      }
    }

    // Order
    @for $i from -1 through 6 {
      .order-#{$breakpoint}-#{$i} {
        order: #{$i};
      }
    }

    // Justification

    .start-#{$breakpoint} {
      display: flex;
      justify-content: flex-start;
    }

    .center-#{$breakpoint} {
      display: flex;
      justify-content: center;
    }

    .end-#{$breakpoint} {
      display: flex;
      justify-content: flex-end;
    }

    .around-#{$breakpoint} {
      display: flex;
      justify-content: space-around;
    }

    .between-#{$breakpoint} {
      display: flex;
      justify-content: space-between;
    }

    .evenly-#{$breakpoint} {
      display: flex;
      justify-content: space-evenly;
    }
    // Alignment

    .top-#{$breakpoint} {
      display: flex;
      align-items: flex-start;
    }

    .middle-#{$breakpoint} {
      display: flex;
      align-items: center;
    }

    .bottom-#{$breakpoint} {
      display: flex;
      align-items: flex-end;
    }
  }
}
